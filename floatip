#!/bin/sh

param=$1

export zt_token=$OCF_RESKEY_zt_token
export zt_controllerURL=$OCF_RESKEY_zt_controllerURL
export zt_networkID=$OCF_RESKEY_zt_networkID
IP=$OCF_RESKEY_floating_ip


meta_data() {
  cat <<END
<?xml version="1.0"?>
<!DOCTYPE resource-agent SYSTEM "ra-api-1.dtd">
<resource-agent name="floatip" version="0.1">
  <version>0.1</version>
  <longdesc lang="en">
floatip ocf resource agent for claiming a specified Floating IP via the ZeroTier API</longdesc>
  <shortdesc lang="en">Assign Floating IP via ZeroTier API</shortdesc>
<parameters>
<parameter name="zt_token" unique="0" required="1">
<longdesc lang="en">
ZeroTier API Token with Read/Write Permissions
</longdesc>
<shortdesc lang="en">ZeroTier API Token</shortdesc>
</parameter>
<parameter name="floating_ip" unique="0" required="1">
<longdesc lang="en">
Floating IP to reassign
</longdesc>
<shortdesc lang="en">Floating IP</shortdesc>
</parameter>
<parameter name="zt_controllerURL" unique="0" required="1">
<longdesc lang="en">
Base URL to Zerotier Controller
</longdesc>
<shortdesc lang="en">zt_controllerURL</shortdesc>
</parameter>
<parameter name="zt_networkID" unique="0" required="1">
<longdesc lang="en">
Zerotier Network ID
</longdesc>
<shortdesc lang="en">zt Network ID</shortdesc>
</parameter>
</parameters>
  <actions>
    <action name="start"        timeout="20" />
    <action name="stop"         timeout="20" />
    <action name="monitor"      timeout="20"
                                interval="10" depth="0" />
    <action name="meta-data"    timeout="5" />
  </actions>
</resource-agent>
END
}

if [ "start" = "$param" ] ; then
  currentIPs=$(ip addr show | grep inet | grep -v inet6 | awk '{print $2}')
  ID=$(cat /var/lib/zerotier-one/identity.public | cut -d':' -f1)
  HAS_FLOATING_IP=$(echo "$currentIPs"| grep -c "$IP")
  python /usr/local/bin/assign-ip "$IP" "$ID"
  exit 0
elif [ "stop" = "$param" ] ; then
  exit 0;
elif [ "status" = "$param" ] ; then
  if [ "$HAS_FLOATING_IP" -eq 1 ] ; then
    echo "Has Floating IP"
    exit 0
  else
    echo "Does Not Have Floating IP"
    exit 1
  fi
elif [ "monitor" = "$param" ] ; then
  if [ "$HAS_FLOATING_IP" -eq 1 ] ; then
    exit 0
  else
    exit 7
  fi
elif [ "meta-data" = "$param" ] ; then
  meta_data
  exit 0
else
  echo "no such command $param"
  exit 1;
fi
